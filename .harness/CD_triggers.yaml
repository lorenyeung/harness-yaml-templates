pipeline:
  name: CD - triggers
  identifier: CD_triggers
  projectIdentifier: technical_exercise
  orgIdentifier: default
  tags:
    cd: ""
    three: ""
    six: ""
  stages:
    - stage:
        name: cd
        identifier: cd
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: nginx_svc
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  manifests:
                    - manifest:
                        identifier: nginx_manifest
                        type: HelmChart
                        spec:
                          chartVersion: <+input>
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
          environment:
            environmentRef: dev
            deployToAll: false
            infrastructureDefinitions:
              - identifier: gcpinfra
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: Shell Script_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    onDelegate: true
                    source:
                      type: Inline
                      spec:
                        script: |-
                          echo "payload" <+eventPayload>
                          echo "trigger" <+trigger>
                          echo "modified" <+eventPayload.head_commit.modified.toString()>
                          echo "modified" <+eventPayload.head_commit.modified>
                          echo "artifact" <+artifact.filePath>
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
            rollbackSteps: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
    - stage:
        name: dummy ci
        identifier: dummy_ci
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.sagcpk8s
              namespace: loren-dev
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  name: Run_1
                  identifier: Run_1
                  spec:
                    connectorRef: account.harnessImage
                    image: alpine
                    shell: Sh
                    command: |-
                      echo "hello"

                        curl -i \
                        -X POST \
                        -H "Authorization: Bearer <+secrets.getValue('account.ghpatsecretacc')>" \
                        -H "Accept: application/vnd.github.v3+json" \
                        https://api.github.com/repos/lorenyeung/<+pipeline.properties.ci.codebase.repoName>/statuses/<+codebase.commitSha> \
                        -d '{"state":"pending","target_url":"<+pipeline.execution.url>","description":"Test is running","context":"harness-ci/tests"}'
  properties:
    ci:
      codebase:
        connectorRef: ghrepoharnessyamltemplates
        build: <+input>

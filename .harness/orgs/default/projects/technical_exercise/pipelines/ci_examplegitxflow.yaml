pipeline:
  name: ci example-gitx-flow
  identifier: ci_examplegitxflow
  projectIdentifier: technical_exercise
  orgIdentifier: default
  tags:
    "0": ""
  properties:
    ci:
      codebase:
        connectorRef: account.ghconnectorcloud
        repoName: pcf-go-sample-app
        build: <+input>
  stages:
    - stage:
        name: ci
        identifier: ci
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: get latest release and increment
                  identifier: get_latest_release_and_increment
                  spec:
                    connectorRef: account.lorennonprodazure
                    image: lorennonprod.azurecr.io/loren/alpine-jq-yq-curl-bash
                    shell: Sh
                    command: |-
                      tag_name=$(curl -L \
                        -H "Accept: application/vnd.github+json" \
                        -H 'Authorization: Bearer <+secrets.getValue("account.ghpatsecretacc")>' \
                        -H "X-GitHub-Api-Version: 2022-11-28" \
                        https://api.github.com/repos/lorenyeung/pcf-go-sample-app/releases/latest | jq -r '.tag_name')
                      NEXTVERSION=$(echo $tag_name | awk -F. -v OFS=. '{$NF += 1 ; print}')
                      echo $NEXTVERSION

                      # curl -L \
                      #   -H "Accept: application/vnd.github+json" \
                      #   -H 'Authorization: Bearer <+secrets.getValue("account.ghpatsecretacc")>' \
                      #   -H "X-GitHub-Api-Version: 2022-11-28" \
                      #   "https://api.github.com/repos/lorenyeung/pcf-go-sample-app/releases" -H "Content-Type: application/json" -d '{
                      #   "tag_name": "'$NEXTVERSION'",
                      #   "target_commitish": "<+codebase.branch>",
                      #   "name": "v'$NEXTVERSION'",
                      #   "body": "<+codebase.commitMessage>",
                      #   "draft": false,
                      #   "prerelease": false
                      # }'
                    outputVariables:
                      - name: NEXTVERSION
              - step:
                  type: Run
                  name: build
                  identifier: Run_1
                  spec:
                    connectorRef: account.lorennonprodazure
                    image: lorennonprod.azurecr.io/golang1.21.6-alpine:sampleapp
                    shell: Sh
                    command: |
                      go version
                      make
                      zip -r sample-app-<+stage.variables.nextver>.zip sampleapp-linux-x64 Procfile templates static
                      mv sample-app-<+stage.variables.nextver>.zip /harness/
                    imagePullPolicy: IfNotPresent
                    resources:
                      limits:
                        cpu: "1"
              - step:
                  identifier: publish
                  name: publish
                  type: Plugin
                  spec:
                    connectorRef: account.lorenharnessdockerhubcloud
                    image: plugins/github-release
                    settings:
                      api_key: <+secrets.getValue("account.ghpatsecretacc")>
                      files: /harness/sample-app-<+stage.variables.nextver>.zip
                  when:
                    stageStatus: Success
                    condition: "false"
              - step:
                  type: S3Upload
                  name: S3Upload_1
                  identifier: S3Upload_1
                  spec:
                    connectorRef: account.aws_oidc
                    region: us-west-1
                    bucket: loren-general-purpose-s3-bucket
                    sourcePath: /harness/sample-app-<+stage.variables.nextver>.zip
                    target: 22/pcf-go-sample-app/<+stage.variables.nextver>/sample-app-<+stage.variables.nextver>.zip
              - step:
                  type: ArtifactoryUpload
                  name: ArtifactoryUpload
                  identifier: ArtifactoryUpload
                  spec:
                    connectorRef: harnessartifactory
                    target: generic-local/loren/sampleapp/<+stage.variables.nextver>/sample-app-<+stage.variables.nextver>.zip
                    sourcePath: /harness/sample-app-<+stage.variables.nextver>.zip
                  when:
                    stageStatus: Success
                    condition: "false"
              - step:
                  type: Plugin
                  name: publish artifact metadata
                  identifier: publish_artifact_metadata
                  spec:
                    connectorRef: account.harnessImage
                    image: plugins/artifact-metadata-publisher
                    settings:
                      file_urls: https://harness.jfrog.io/artifactory/generic-local/loren/sampleapp/<+stage.variables.nextver>/sample-app-<+stage.variables.nextver>.zip
                      artifact_file: sample-app-<+stage.variables.nextver>.zip
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        variables:
          - name: nextver
            type: String
            description: ""
            required: false
            value: <+execution.steps.get_latest_release_and_increment.output.outputVariables.NEXTVERSION>
  allowStageExecutions: true
